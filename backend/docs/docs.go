// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/voucher": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Voucher"
                ],
                "summary": "Get all vouchers",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "default is 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "default is 10",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.GetVoucher"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/voucher/check": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Voucher"
                ],
                "summary": "Check voucher by flight number and date",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CheckVoucher"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CheckVoucher"
                        }
                    }
                }
            }
        },
        "/api/v1/voucher/generate": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Voucher"
                ],
                "summary": "Generate voucher",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.GenerateVoucher"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GenerateVoucher"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "request.CheckVoucher": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "flightNumber": {
                    "type": "string"
                }
            }
        },
        "request.GenerateVoucher": {
            "type": "object",
            "properties": {
                "aircraft": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "flightNumber": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "response.CheckVoucher": {
            "type": "object",
            "properties": {
                "exists": {
                    "type": "boolean"
                }
            }
        },
        "response.GenerateVoucher": {
            "type": "object",
            "properties": {
                "seats": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "response.GetVoucher": {
            "type": "object",
            "properties": {
                "aircraftType": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "crewId": {
                    "type": "string"
                },
                "crewName": {
                    "type": "string"
                },
                "flightDate": {
                    "type": "string"
                },
                "flightNumber": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "seat": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
